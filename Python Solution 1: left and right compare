# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def isBalanced(self, root: Optional[TreeNode]) -> bool:
        def bruh(root: Optional[TreeNode]) -> int:
            if root is None:
                return 0
            
            heightLeft = bruh(root.left)
            heightRight = bruh(root.right)
            
            if heightLeft == -1 or heightRight == -1:
                return -1
            
            if abs(heightLeft - heightRight) > 1:
                return -1
            
            return max(heightLeft, heightRight) + 1
        
        return bruh(root) != -1
